load("@npm//@bazel/typescript:index.bzl", "ts_library")
load("@npm//http-server:index.bzl", "http_server")
load("@npm//sass:index.bzl", "sass")
load(
    "@npm//webpack-cli:index.bzl",
    webpack = "webpack_cli",
)

sass(
    name = "styles",
    outs = ["styles.css"],
    args = [
        "$(execpath styles.scss)",
        "$(execpath styles.css)",
    ],
    data = ["styles.scss"],
)

ts_library(
    name = "app",
    srcs = glob([
        "*.ts",
        "*.tsx",
    ]),
    devmode_module = "es2015",
    deps = [
        "@npm//@material-ui/core",
        "@npm//@material-ui/icons",
        "@npm//@types",
        "@npm//csstype",
        "@npm//lorem-ipsum",
        "@npm//react",
        "@npm//react-dom",
        "@npm//react-router-dom",
    ],
)

filegroup(
    name = "app.js",
    srcs = [":app"],
    output_group = "es5_sources",
)

webpack(
    name = "bundle",
    outs = ["app.bundle.js"],
    args = [
        "$(locations :app.js)",
        "--config",
        "$(execpath webpack.config.js)",
        "--mode=development",
        "-o",
        "$@",
    ],
    data = [
        "webpack.config.js",
        ":app.js",
        "@npm//:node_modules",
    ],
)

http_server(
    name = "server",
    data = [
        "app.bundle.js",
        "index.html",
    ],
    templated_args = ["client"],
)
